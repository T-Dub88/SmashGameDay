// Generated by view binder compiler. Do not edit!
package com.example.smashgameday.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.smashgameday.R;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ListItemBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final TextInputLayout damageDealt;

  @NonNull
  public final TextView damageDealtStat;

  @NonNull
  public final TextInputEditText damageDealtText;

  @NonNull
  public final TextInputLayout kill;

  @NonNull
  public final TextView killStat;

  @NonNull
  public final TextInputEditText killsText;

  @NonNull
  public final TextInputLayout place;

  @NonNull
  public final TextInputEditText placeText;

  @NonNull
  public final TextView playerName;

  @NonNull
  public final TextView score;

  @NonNull
  public final TextInputLayout sds;

  @NonNull
  public final TextView sdsStat;

  @NonNull
  public final TextInputEditText sdsText;

  @NonNull
  public final TextView totalStats;

  private ListItemBinding(@NonNull MaterialCardView rootView, @NonNull TextInputLayout damageDealt,
      @NonNull TextView damageDealtStat, @NonNull TextInputEditText damageDealtText,
      @NonNull TextInputLayout kill, @NonNull TextView killStat,
      @NonNull TextInputEditText killsText, @NonNull TextInputLayout place,
      @NonNull TextInputEditText placeText, @NonNull TextView playerName, @NonNull TextView score,
      @NonNull TextInputLayout sds, @NonNull TextView sdsStat, @NonNull TextInputEditText sdsText,
      @NonNull TextView totalStats) {
    this.rootView = rootView;
    this.damageDealt = damageDealt;
    this.damageDealtStat = damageDealtStat;
    this.damageDealtText = damageDealtText;
    this.kill = kill;
    this.killStat = killStat;
    this.killsText = killsText;
    this.place = place;
    this.placeText = placeText;
    this.playerName = playerName;
    this.score = score;
    this.sds = sds;
    this.sdsStat = sdsStat;
    this.sdsText = sdsText;
    this.totalStats = totalStats;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.damage_dealt;
      TextInputLayout damageDealt = ViewBindings.findChildViewById(rootView, id);
      if (damageDealt == null) {
        break missingId;
      }

      id = R.id.damage_dealt_stat;
      TextView damageDealtStat = ViewBindings.findChildViewById(rootView, id);
      if (damageDealtStat == null) {
        break missingId;
      }

      id = R.id.damage_dealt_text;
      TextInputEditText damageDealtText = ViewBindings.findChildViewById(rootView, id);
      if (damageDealtText == null) {
        break missingId;
      }

      id = R.id.kill;
      TextInputLayout kill = ViewBindings.findChildViewById(rootView, id);
      if (kill == null) {
        break missingId;
      }

      id = R.id.kill_stat;
      TextView killStat = ViewBindings.findChildViewById(rootView, id);
      if (killStat == null) {
        break missingId;
      }

      id = R.id.kills_text;
      TextInputEditText killsText = ViewBindings.findChildViewById(rootView, id);
      if (killsText == null) {
        break missingId;
      }

      id = R.id.place;
      TextInputLayout place = ViewBindings.findChildViewById(rootView, id);
      if (place == null) {
        break missingId;
      }

      id = R.id.place_text;
      TextInputEditText placeText = ViewBindings.findChildViewById(rootView, id);
      if (placeText == null) {
        break missingId;
      }

      id = R.id.player_name;
      TextView playerName = ViewBindings.findChildViewById(rootView, id);
      if (playerName == null) {
        break missingId;
      }

      id = R.id.score;
      TextView score = ViewBindings.findChildViewById(rootView, id);
      if (score == null) {
        break missingId;
      }

      id = R.id.sds;
      TextInputLayout sds = ViewBindings.findChildViewById(rootView, id);
      if (sds == null) {
        break missingId;
      }

      id = R.id.sds_stat;
      TextView sdsStat = ViewBindings.findChildViewById(rootView, id);
      if (sdsStat == null) {
        break missingId;
      }

      id = R.id.sds_text;
      TextInputEditText sdsText = ViewBindings.findChildViewById(rootView, id);
      if (sdsText == null) {
        break missingId;
      }

      id = R.id.total_stats;
      TextView totalStats = ViewBindings.findChildViewById(rootView, id);
      if (totalStats == null) {
        break missingId;
      }

      return new ListItemBinding((MaterialCardView) rootView, damageDealt, damageDealtStat,
          damageDealtText, kill, killStat, killsText, place, placeText, playerName, score, sds,
          sdsStat, sdsText, totalStats);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
